//
//  DatabaseStructure.swift
//  RD Vivaha Jewellers
//
//  Created by Raghul S on 16/01/24.
//

import Foundation

class DatabaseStructure{
    public static var tables: [Table] = []
    static func create(){
    
        tables.append(Table("logs_from_devops","`filename` TEXT","`classname` TEXT","`funcname` TEXT","`line` INT","`logtype` TEXT","`msg` TEXT"))
        
        tables.append(Table("skynet_intelligence_test","`filename` TEXT","`classname` TEXT","`funcname` TEXT","`line` INT","`logtype` TEXT","`msg` TEXT"))


        tables.append(Table(gold_finalized_bills_after_payment_t2 , "`billid` TEXT", "`today_billid` TEXT", "`attender1` TEXT", "`attender2` TEXT", "`attender3` TEXT", "`itemcode` TEXT", "`jewelimage` TEXT", "`goldcategory` TEXT", "`jeweltype` TEXT", "`subtype` TEXT", "`measurement` TEXT", "`alavucategory` TEXT", "`weightcategory` TEXT", "`weight` FLOAT", "`return_status` INT", "`itemprice` TEXT", "`mc_itemprice` TEXT", "`makingcharge` REAL", "`wastageperc` REAL", "`metcategory` TEXT", "`metprice` TEXT", "`paymenttype` TEXT", "`referenceid` TEXT", "`paidbyother` TEXT", "`proofimage` TEXT", "`metaltype` TEXT", "`metalweight` TEXT", "`metalwaste` TEXT", "`purityperc` REAL", "`onlinetype` TEXT", "`jewelprice` FLOAT", "`rold` FLOAT", "`roldcalceqvamt` TEXT", "`rexchangecodes` TEXT", "`rexchangecalceqvamt` FLOAT", "`rpure` FLOAT", "`rpurecalceqvamt` TEXT", "`coincode` TEXT", "`rcoin` FLOAT", "`rcoincalceqvamt` FLOAT", "`rcash` FLOAT", "`fromid` TEXT", "`customerqueue` TEXT", "`credit_customer_name` TEXT", "`advance_amt` FLOAT", "`customerwallet` INT", "`careof` TEXT", "`credit_narration` TEXT", "`return_credit_amt_date` DATE", "`credit_status` INT", "`rtransactionhash` TEXT", "`rbankcash` FLOAT", "`bybank` INT", "`gstperc` REAL", "`discountperc` REAL", "`gsttotalprice` FLOAT", "`discounttotalprice` FLOAT", "`roundofprice` FLOAT", "`totalprice` FLOAT", "`cust_phno` TEXT", "`tagaton` TEXT", "`irdstatus` INT", "`oldex_buyingtype` TEXT", "`oldex_changetype` TEXT", "`oldex_piececount` TEXT", "`oldex_paidamt` TEXT", "`oldex_proofimage` TEXT", "`oldex_metaltype` TEXT", "`oldex_metalweight` TEXT", "`oldex_metalwaste` TEXT", "`oldex_purityperc` REAL", "`oldex_jewelprice` TEXT", "`ex_itemcode` TEXT", "`ex_amt` TEXT", "`ex_proofimage` TEXT", "`pure_changetype` TEXT", "`pure_ramt` TEXT", "`pure_proofimage` TEXT", "`pure_metaltype` TEXT", "`pure_metalweight` TEXT", "`pure_purityperc` REAL", "`pure_jewelprice` TEXT", "`coin_buyingtype` TEXT", "`coin_piececount` TEXT", "`coin_ramt` TEXT", "`coin_proofimage` TEXT", "`coin_metaltype` TEXT", "`coin_metalweight` TEXT", "`coin_purityperc` REAL", "`coin_jewelprice` TEXT", "`gold24kprice` FLOAT", "`gold22kprice` FLOAT", "`gold18kprice` FLOAT", "`final_status` INT", "`namestatus` INT", "`stall` TEXT", "`testentry` TEXT"))

        tables.append(Table(gold_smith_old_jewels_purchased_registry_t26,"`dealer` TEXT", "`olduniqueid` INT", "`billno` TEXT", "`orderid` TEXT", "`today_billid` TEXT", "`jeweltype` TEXT", "`photo` TEXT", "`billphoto` TEXT", "`piecescount` INT", "`pieceno` TEXT", "`narration` TEXT", "`cweight` INT", "`rweight` FLOAT", "`pweight` FLOAT", "`wastage` FLOAT", "`quality` TEXT", "`actualpurityperc` FLOAT", "`purchasedpurityperc` FLOAT", "`boardrate` FLOAT", "`purchasedrate` FLOAT", "`inhandsof` TEXT", "`meltid` TEXT", "`ftodat_narration` TEXT"))
                            
        tables.append(Table(gold_view_pnl_from_billing_high_performance_table_t4 , "`billdate` DATE", " `billno` TEXT", " `billid` TEXT", " `attender1` TEXT", " `attender2` TEXT", " `attender3` TEXT", " `attender1q` TEXT", " `attender2q` TEXT", " `attender3q` TEXT", " `item` TEXT", " `weight` FLOAT", " `stoneweight` FLOAT", " `puritytouch` TEXT", " `salesamt` TEXT", " `stoneprice` TEXT", " `gstperc` TEXT", " `gstamount` TEXT", " `discountprice` TEXT", " `discountperc` TEXT", " `purchaseamt` FLOAT", " `profitperg` FLOAT", " `totalprofit` FLOAT", " `finalprofit` FLOAT", " `purerate` FLOAT", " `calculationrate` FLOAT", " `itemcode` TEXT", " `jeweltype` TEXT", " `fgst` INT", " `tgstperc` FLOAT", " `tgst` INT", " `fgstperc` FLOAT", " `exchange` INT"))



        tables.append(Table(gold_direct_sell_items_with_details_for_billing_t5,"`purchasecode` TEXT", "`dealer` TEXT", "`jeweltype` TEXT", "`subtype` TEXT", "`measurement` TEXT", "`alavucategory` TEXT", "`weightcategory` TEXT", "`weight` TEXT", "`jewelsimage` TEXT", "`stonetype` TEXT", "`stonesize` TEXT", "`stonecount` TEXT", "`stoneprice` TEXT", "`stoneweight` TEXT", "`totstoneprice` TEXT", "`totstoneweight` TEXT", "`wastageperc` FLOAT", "`wastageg` FLOAT", "`mcpg` FLOAT", "`makingcharge` TEXT", "`itemcode` TEXT", "`directsell` TEXT"))



        tables.append(Table(gold_old_jewels_purchased_registry_t6 ,"`dealer` TEXT", "`olduniqueid` INT", "`billno` TEXT", "`orderid` TEXT", "`today_billid` TEXT", "`jeweltype` TEXT", "`photo` TEXT", "`billphoto` TEXT", "`piecescount` INT", "`pieceno` TEXT", "`narration` TEXT", "`rweight` FLOAT", "`pweight` FLOAT", "`wastage` FLOAT", "`quality` TEXT", "`actualpurityperc` FLOAT", "`purchasedpurityperc` FLOAT", "`boardrate` FLOAT", "`purchasedrate` FLOAT", "`inhandsof` TEXT", "`meltid` TEXT", "`ftodat_narration` TEXT"))


        tables.append(Table(all_cash_transactions_ledger_t7, "`tblname` TEXT", "`colname` TEXT", "`amt` INT", "`at1` TEXT", "`ad1` TEXT", "`at2` TEXT", "`ad2` TEXT", "`at3` TEXT", "`ad3` TEXT", "`at4` TEXT", "`ad4` TEXT"))


        tables.append(Table(all_members_registered_details_t8,"`queue` TEXT", "`membertype` TEXT", "`wtype` TEXT", "`wcategory` TEXT", "`rno` TEXT", "`rnocategory` TEXT", "`trcode` TEXT", "`emis` TEXT", "`examno` TEXT", "`addid` TEXT", "`addid2` TEXT", "`offinam` TEXT", "`whatsappgroupname` TEXT", "`petnam` TEXT", "`pgm_cmts` TEXT", "`board` TEXT", "`cls` TEXT", "`sec` TEXT", "`sphoto` TEXT", "`ssign` TEXT", "`sproofonef` TEXT", "`sproofoneb` TEXT", "`sprooftwof` TEXT", "`sprooftwob` TEXT", "`spicture` TEXT", "`dob` DATE", "`tob` TIME", "`sex` TEXT", "`ph1` TEXT", "`ph2` TEXT", "`mail1` TEXT", "`mail2` TEXT", "`add1` TEXT", "`add2` TEXT", "`hostel` TEXT", "`vno` TEXT", "`stage` TEXT", "`adno` TEXT", "`pan` TEXT", "`qual` TEXT", "`desig` TEXT", "`doj` DATE", "`yearofjoin` YEAR", "`yeartermofjoin` TEXT", "`qrofjoin` INT", "`wexp` TEXT", "`prework` TEXT", "`radm` TEXT", "`fnam` TEXT", "`fotype` TEXT", "`foccu` TEXT", "`foccuco` TEXT", "`foccuadd` TEXT", "`fph1` TEXT", "`fph2` TEXT", "`fmail1` TEXT", "`fmail2` TEXT", "`foccuph` TEXT", "`fexist` TEXT", "`mnam` TEXT", "`motype` TEXT", "`moccu` TEXT", "`moccuco` TEXT", "`moccuadd` TEXT", "`mph1` TEXT", "`mph2` TEXT", "`mmail1` TEXT", "`mmail2` TEXT", "`moccuph` TEXT", "`mexist` TEXT", "`spnam` TEXT", "`spoccutype` TEXT", "`spoccu` TEXT", "`spoccuco` TEXT", "`spoccuadd` TEXT", "`sph1` TEXT", "`sph2` TEXT", "`spmail1` TEXT", "`spmail2` TEXT", "`spoccuph` TEXT", "`spexist` TEXT", "`sibling1` TEXT", "`siblingbirth1` DATE", "`siblingco1` TEXT", "`siblingamb1` TEXT", "`sibling2` TEXT", "`siblingbirth2` DATE", "`siblingco2` TEXT", "`siblingamb2` TEXT", "`sibling3` TEXT", "`siblingbirth3` DATE", "`siblingco3` TEXT", "`siblingamb3` TEXT", "`sibling4` TEXT", "`siblingbirth4` DATE", "`siblingco4` TEXT", "`siblingamb4` TEXT", "`child1` TEXT", "`childbirth1` DATE", "`childschool1` TEXT", "`childamb1` TEXT", "`child2` TEXT", "`childbirth2` DATE", "`childschool2` TEXT", "`childamb2` TEXT", "`child3` TEXT", "`childbirth3` DATE", "`childschool3` TEXT", "`childamb3` TEXT", "`child4` TEXT", "`childbirth4` DATE", "`childschool4` TEXT", "`childamb4` TEXT", "`g1` TEXT", "`gph1` TEXT", "`g2` TEXT", "`gph2` TEXT", "`mt` TEXT", "`nationality` TEXT", "`nativepl` TEXT", "`caste` TEXT", "`subcaste` TEXT", "`commu` TEXT", "`religion` TEXT", "`hoby` TEXT", "`amb` TEXT", "`parentamb` TEXT", "`spoint` TEXT", "`bg` TEXT", "`mediss` TEXT", "`eye` TEXT", "`ht` TEXT", "`wt` TEXT", "`pqueue` TEXT", "`pcode` TEXT", "`psphoto` TEXT", "`pspicture` TEXT", "`balanceamt` INT", "`referedby` TEXT", "`addinfo1` TEXT", "`addinfo2` TEXT", "`addinfo3` TEXT", "`fromqrcode` INT", "`feelevel` INT", "`exist` DATE"))


        tables.append(Table(all_skynet_wallet_transaction_ledger_t9 , "`entryid` TEXT", "`queue` TEXT", "`amt` INT", "`nar` TEXT", "`ffdtype` TEXT", "`proof` TEXT", "`getfrom` TEXT", "`category` TEXT", "`ereturn` INT", "`esession` TEXT", "`incharge` TEXT", "`competition` TEXT", "`dept` TEXT", "`fkeyforfeegen` INT"))



        tables.append(Table(com_customer_phno_address_book_t10 , "`queue` TEXT", "`customer` TEXT", "`customername` TEXT", "`faorspouname` TEXT", "`dob` DATE", "`dowedding` DATE", "`gender` TEXT", "`custphoto` TEXT", "`mailid` TEXT", "`ph1no` TEXT", "`ph2no` TEXT", "`address` TEXT", "`postaladdress` TEXT", "`reference` TEXT", "`referedby` TEXT", "`addinfo` TEXT", "`visitedbranch` TEXT", "`relationcounti` INT", "`relationtype` TEXT", "`verified` INT"))


        tables.append(Table(gold_current_price_of_metals_at_retail_melting_t11, "`gold24kprice` FLOAT", "`gold22kprice` FLOAT", "`gold18kprice` FLOAT", "`gold16kprice` FLOAT", "`coinrate` FLOAT", "`silverprice` FLOAT", "`silverpureprice` FLOAT", "`silveroldprice` FLOAT", "`fromdate` DATE", "`fromtime` TIME", "`todate` DATE", "`totime` TIME"))




        tables.append(Table(gold_jeweltypes_with_subtypes_categories_and_price_limits_t12 , "`type` TEXT", "`code` TEXT", "`subtype` TEXT", "`min_wastage_perc` TEXT", "`max_wastage_perc` TEXT", "`min_making_chrge` TEXT", "`max_making_chrge` TEXT", "`goldcategory` TEXT", "`min_price` TEXT", "`max_price` TEXT", "`unitofalavu` TEXT", "`alavucategories` TEXT", "`weightcategories` TEXT", "`mustbetagged` TEXT"))


                            
        tables.append(Table(gold_neighbour_sell_items_with_details_created_while_billing_t13 , "`shopname` TEXT", "`jeweltype` TEXT", "`subtype` TEXT", "`measurement` TEXT", "`alavucategory` TEXT", "`weightcategory` TEXT", "`weight` TEXT", "`touch` FLOAT", "`paybackmetal` TEXT", "`tppure` FLOAT", "`ppure` FLOAT", "`jewelsimage` TEXT", "`stonetype` TEXT", "`stonesize` TEXT", "`stonecount` TEXT", "`stoneprice` TEXT", "`stoneweight` TEXT", "`totstoneprice` TEXT", "`totstoneweight` TEXT", "`paymentstatus` INT", "`wastageperc` FLOAT", "`wastageg` FLOAT", "`mcpg` FLOAT", "`beforeopening` INT", "`makingcharge` TEXT"))

                            
        tables.append(Table(gold_customer_balance_to_be_paid_t23 , "`billid` TEXT", "`today_billid` TEXT", "`itemcode` TEXT", "`jeweltype` TEXT", "`weight` FLOAT", "`careof` TEXT", "`oldcareof` TEXT", "`credit_customer_name` TEXT", "`cust_phno` TEXT", "`cust_phno2` TEXT", "`return_credit_amt_date` DATE", "`address` TEXT", "`addressornone` TEXT", "`advance_amt` FLOAT", "`totalprice` FLOAT", "`rcash` FLOAT", "`adjustmentid` TEXT", "`credit_status` INT", "`irdstatus` INT", "`credit_narration` TEXT", "`openingbal` INT", "`callingstatus` INT", "`pendingfrom` TEXT", "`priceof916whilebuying` FLOAT", "`equivalentof916` FLOAT", "`todaysequivalent` FLOAT"))
                            
        tables.append(Table(com_accounts_receipt_entries_for_cashbook_t15 ,"`category` TEXT", "`dealer_type` TEXT", "`dealer_name` TEXT", "`vehicleno` TEXT", "`billno` TEXT", "`paymentmethod` TEXT", "`description` TEXT", "`ramt` INT", "`rtransactionhash` INT", "`rbankcash` INT", "`balance` INT", "`adata1` TEXT", "`adata2` TEXT", "`adata3` TEXT", "`transactionid` TEXT", "`phno1` TEXT", "`phno2` TEXT", "`cqueue` TEXT", "`higherauthorities` INT", "`narration` TEXT", "`date` DATE", "`status` TEXT", "`bill` TEXT", "`prebookitem` TEXT"))


        tables.append(Table(gold_generated_quotation_before_billing_t16 ,"`billid` TEXT", "`today_billid` TEXT", "`attender1` TEXT", "`attender2` TEXT", "`attender3` TEXT", "`itemcode` TEXT", "`jewelimage` TEXT", "`goldcategory` TEXT", "`jeweltype` TEXT", "`subtype` TEXT", "`measurement` TEXT", "`alavucategory` TEXT", "`weightcategory` TEXT", "`weight` TEXT", "`itemprice` TEXT", "`mc_itemprice` TEXT", "`makingcharge` TEXT", "`wastageperc` TEXT", "`metcategory` TEXT", "`metprice` TEXT", "`paymenttype` TEXT", "`referenceid` TEXT", "`paidbyother` TEXT", "`proofimage` TEXT", "`metaltype` TEXT", "`metalweight` TEXT", "`metalwaste` TEXT", "`purityperc` TEXT", "`onlinetype` TEXT", "`jewelprice` TEXT", "`stonetype` TEXT", "`stonecs` TEXT", "`stonename` TEXT", "`stonesize` TEXT", "`stonecount` TEXT", "`stoneprice` TEXT", "`stoneweight` TEXT", "`totstoneprice` TEXT", "`totstoneweight` TEXT", "`rold` FLOAT", "`roldcalceqvamt` FLOAT", "`rexchangecodes` TEXT", "`rexchangecalceqvamt` FLOAT", "`rpure` FLOAT", "`rpurecalceqvamt` FLOAT", "`coincode` TEXT", "`rcoin` FLOAT", "`rcoincalceqvamt` FLOAT", "`rcash` FLOAT", "`fromid` TEXT", "`customerqueue` TEXT", "`credit_customer_name` TEXT", "`return_credit_amt_date` DATE", "`advance_amt` FLOAT", "`customerwallet` INT", "`careof` TEXT", "`credit_narration` TEXT", "`rtransactionhash` TEXT", "`rbankcash` FLOAT", "`bybank` INT", "`gstperc` TEXT", "`discountperc` TEXT", "`gsttotalprice` FLOAT", "`discounttotalprice` FLOAT", "`roundofprice` FLOAT", "`oldex_buyingtype` TEXT", "`oldex_changetype` TEXT", "`oldex_piececount` TEXT", "`oldex_paidamt` TEXT", "`oldex_proofimage` TEXT", "`oldex_metaltype` TEXT", "`oldex_metalweight` TEXT", "`oldex_metalwaste` TEXT", "`oldex_purityperc` TEXT", "`oldex_jewelprice` TEXT", "`ex_itemcode` TEXT", "`ex_amt` TEXT", "`ex_proofimage` TEXT", "`pure_changetype` TEXT", "`pure_ramt` TEXT", "`pure_proofimage` TEXT", "`pure_metaltype` TEXT", "`pure_metalweight` TEXT", "`pure_purityperc` TEXT", "`pure_jewelprice` TEXT", "`coin_buyingtype` TEXT", "`coin_piececount` TEXT", "`coin_ramt` TEXT", "`coin_proofimage` TEXT", "`coin_metaltype` TEXT", "`coin_metalweight` TEXT", "`coin_purityperc` TEXT", "`coin_jewelprice` TEXT", "`bycash` TEXT", "`totalprice` TEXT", "`cust_phno` TEXT", "`tagaton` TEXT", "`gold24kprice` FLOAT", "`gold22kprice` FLOAT", "`gold18kprice` FLOAT", "`namestatus` INT"))


                            
                            
        tables.append(Table(gold_nearby_jewelries_for_relationship_and_sales_t17 , "`shopname` TEXT", "`description` TEXT", "`phno` TEXT"))

                            
                            
        tables.append(Table(gold_primary_stock_dealers_details_t18 , "`code` TEXT", "`seal` TEXT", "`dealername` TEXT", "`sizescale` TEXT", "`phno1` TEXT", "`phno2` TEXT", "`address` TEXT", "`photos` TEXT", "`description` TEXT", "`district` TEXT", "`state` TEXT", "`neighbourcounti` TEXT"))


        tables.append(Table(gold_owners_controls_over_various_fields_t19 , "`min_fixed_gst` INT", "`fixed_gst` INT", "`max_discount` TEXT", "`display_roundoff` TEXT", "`display_discount` TEXT", "`addon_amount` INT"))

                            
        tables.append(Table(gold_old_jewels_given_as_payment_to_dealer_or_sold_to_customer_t24, "`olduniqueid` TEXT", "`billno` TEXT", "`orderid` TEXT", "`todaybillid` TEXT", "`jeweltype` TEXT", "`photo` TEXT", "`billphoto` TEXT", "`piecescount` INT", "`narration` TEXT", "`pweight` FLOAT", "`wastage` FLOAT", "`quality` TEXT", "`actualpurityperc` FLOAT", "`purchasedpurityperc` FLOAT", "`givento` TEXT", "`dealer` TEXT", "`dealerpaymentcode` TEXT", "`transactionid` TEXT", "`asdealerbeforepurebalance` FLOAT", "`asdealerpurebalance` FLOAT", "`asdealerafterpurebalance` FLOAT", "`asdealerbeforemcbalance` FLOAT", "`asdealermcbalance` FLOAT", "`asdealeraftermcbalance` FLOAT", "`asdealerbeforestonebalance` FLOAT", "`asdealerstonebalance` FLOAT", "`asdealerafterstonebalance` FLOAT", "`asdealerbeforecashbalance` FLOAT", "`asdealercashbalance` FLOAT", "`asdealeraftercashbalance` FLOAT", "`customername` TEXT", "`customerphno` TEXT", "`customercounti` INT", "`paidcashvalue` FLOAT", "`boardrate` FLOAT", "`givenrate` INT", "`obstatus` INT"))
                            
                            
        tables.append(Table(gold_purchases_of_jewels_from_dealers_t21 ,"`purchasecode` TEXT", "`orderid` INT", "`dealercode` TEXT", "`jeweltype` TEXT", "`subtype` TEXT", "`alavucategory` TEXT", "`piececount` INT", "`jewelweight` FLOAT", "`weightperpiece` FLOAT", "`purityperc` FLOAT", "`quality` TEXT", "`touchperc` FLOAT", "`wastage` FLOAT", "`makingcharge` FLOAT", "`makingchargeper` TEXT", "`puritytouch` FLOAT", "`totmakingcharge` INT", "`stonetype` TEXT", "`stonecheckbox` TEXT", "`stonecs` TEXT", "`stonename` TEXT", "`stonesize` TEXT", "`stonecount` TEXT", "`stoneprice` TEXT", "`stoneweight` TEXT", "`totstoneprice` TEXT", "`totstoneweight` TEXT", "`buyingtype` TEXT", "`goldcategory` TEXT", "`purerate` TEXT", "`buyingtime` TEXT", "`tpstone` INT", "`tpmc` INT", "`tppure` FLOAT", "`tpcash` INT", "`pstone` INT", "`pmc` INT", "`ppure` FLOAT", "`pcash` INT", "`rpure` FLOAT", "`rcash` INT", "`rmc` INT", "`rstone` INT", "`pbankcash` INT", "`ptransactionhash` TEXT", "`jewelimage` TEXT", "`billimg` TEXT", "`narration` TEXT", "`tagstatus` INT", "`exitemcode` TEXT", "`exbillid` TEXT", "`customerphno` TEXT", "`customername` TEXT", "`testentry` TEXT"))


                            
        tables.append(Table(gold_exchange_jewel_items_via_bill_det_t22 ,"`type` TEXT", "`exbillid` TEXT", "`extodaybillid` TEXT", "`jeweltype` TEXT", "`jewelimage` TEXT", "`weight` FLOAT", "`itemcode` TEXT", "`billdate` DATE", "`billtime` TIME", "`billid` TEXT", "`todaybillid` TEXT"))

                             
                            
        tables.append(Table(gold_pure_metal_stock_book_t14 ,"`dealer` TEXT", "`billno` TEXT", "`orderid` TEXT", "`olduniqueid` TEXT", "`bullion` TEXT", "`meltid` TEXT", "`photo` TEXT", "`purityperc` FLOAT", "`rweight` FLOAT", "`totalweight` FLOAT", "`advanceweight` FLOAT", "`pweight` FLOAT", "`totalprice` FLOAT", "`gramprice` FLOAT", "`wastage` FLOAT", "`quality` TEXT", "`narration` TEXT", "`purchasedpurityperc` FLOAT", "`boardrate` FLOAT", "`purchasedrate` FLOAT"))

         tables.append(Table(all_categories_and_details_of_banks_owned_by_companies_t25 , "`bank` TEXT", "`displaytocustomers` TEXT", "`brand` TEXT", "`bankvalues` TEXT", "`accno` TEXT", "`banktype` TEXT", "`branch` TEXT", "`ifsc` TEXT", "`imps` TEXT", "`neft` TEXT", "`rtgs` TEXT", "`tpt` TEXT", "`primaryupi` TEXT", "`secondaryupi` TEXT", "`tertiaryupi` TEXT", "`primarycreditcard` TEXT", "`secondarycreditcard` TEXT", "`tertiarycreditcard` TEXT", "`primarydebitcard` TEXT", "`secondarydebitcard` TEXT", "`tertiarydebitcard` TEXT", "`primarypaytm` TEXT", "`secondarypaytm` TEXT", "`tertiarypaytm` TEXT", "`primaryolamoney` TEXT", "`secondaryolamoney` TEXT", "`tertiaryolamoney` TEXT", "`primarymobikwik` TEXT", "`secondarymobikwik` TEXT", "`tertiarymobikwik` TEXT", "`primaryphonepe` TEXT", "`secondaryphonepe` TEXT", "`tertiaryphonepe` TEXT", "`primaryairtelmoney` TEXT", "`secondaryairtelmoney` TEXT", "`tertiaryairtelmoney` TEXT", "`primaryjiomoney` TEXT", "`secondaryjiomoney` TEXT", "`tertiaryjiomoney` TEXT", "`primaryamazonpay` TEXT", "`secondaryamazonpay` TEXT", "`tertiaryamazonpay` TEXT"))




    }
}

let gold_finalized_bills_after_payment_t2 = "gold_finalized_bills_after_payment"
struct t2 {
    static let billid = "billid"
    static let today_billid = "today_billid"
    static let attender1 = "attender1"
    static let attender2 = "attender2"
    static let attender3 = "attender3"
    static let itemcode = "itemcode"
    static let jewelimage = "jewelimage"
    static let goldcategory = "goldcategory"
    static let jeweltype = "jeweltype"
    static let subtype = "subtype"
    static let measurement = "measurement"
    static let alavucategory = "alavucategory"
    static let weightcategory = "weightcategory"
    static let weight = "weight"
    static let return_status = "return_status"
    static let itemprice = "itemprice"
    static let mc_itemprice = "mc_itemprice"
    static let makingcharge = "makingcharge"
    static let wastageperc = "wastageperc"
    static let metcategory = "metcategory"
    static let metprice = "metprice"
    static let paymenttype = "paymenttype"
    static let referenceid = "referenceid"
    static let paidbyother = "paidbyother"
    static let proofimage = "proofimage"
    static let metaltype = "metaltype"
    static let metalweight = "metalweight"
    static let metalwaste = "metalwaste"
    static let purityperc = "purityperc"
    static let onlinetype = "onlinetype"
    static let jewelprice = "jewelprice"
    static let rold = "rold"
    static let roldcalceqvamt = "roldcalceqvamt"
    static let rexchangecodes = "rexchangecodes"
    static let rexchangecalceqvamt = "rexchangecalceqvamt"
    static let rpure = "rpure"
    static let rpurecalceqvamt = "rpurecalceqvamt"
    static let coincode = "coincode"
    static let rcoin = "rcoin"
    static let rcoincalceqvamt = "rcoincalceqvamt"
    static let rcash = "rcash"
    static let fromid = "fromid"
    static let customerqueue = "customerqueue"
    static let credit_customer_name = "credit_customer_name"
    static let advance_amt = "advance_amt"
    static let customerwallet = "customerwalstatic let"
    static let careof = "careof"
    static let credit_narration = "credit_narration"
    static let return_credit_amt_date = "return_credit_amt_date"
    static let credit_status = "credit_status"
    static let rtransactionhash = "rtransactionhash"
    static let rbankcash = "rbankcash"
    static let bybank = "bybank"
    static let gstperc = "gstperc"
    static let discountperc = "discountperc"
    static let gsttotalprice = "gsttotalprice"
    static let discounttotalprice = "discounttotalprice"
    static let roundofprice = "roundofprice"
    static let totalprice = "totalprice"
    static let cust_phno = "cust_phno"
    static let tagaton = "tagaton"
    static let irdstatus = "irdstatus"
    static let oldex_buyingtype = "oldex_buyingtype"
    static let oldex_changetype = "oldex_changetype"
    static let oldex_piececount = "oldex_piececount"
    static let oldex_paidamt = "oldex_paidamt"
    static let oldex_proofimage = "oldex_proofimage"
    static let oldex_metaltype = "oldex_metaltype"
    static let oldex_metalweight = "oldex_metalweight"
    static let oldex_metalwaste = "oldex_metalwaste"
    static let oldex_purityperc = "oldex_purityperc"
    static let oldex_jewelprice = "oldex_jewelprice"
    static let ex_itemcode = "ex_itemcode"
    static let ex_amt = "ex_amt"
    static let ex_proofimage = "ex_proofimage"
    static let pure_changetype = "pure_changetype"
    static let pure_ramt = "pure_ramt"
    static let pure_proofimage = "pure_proofimage"
    static let pure_metaltype = "pure_metaltype"
    static let pure_metalweight = "pure_metalweight"
    static let pure_purityperc = "pure_purityperc"
    static let pure_jewelprice = "pure_jewelprice"
    static let coin_buyingtype = "coin_buyingtype"
    static let coin_piececount = "coin_piececount"
    static let coin_ramt = "coin_ramt"
    static let coin_proofimage = "coin_proofimage"
    static let coin_metaltype = "coin_metaltype"
    static let coin_metalweight = "coin_metalweight"
    static let coin_purityperc = "coin_purityperc"
    static let coin_jewelprice = "coin_jewelprice"
    static let gold24kprice = "gold24kprice"
    static let gold22kprice = "gold22kprice"
    static let gold18kprice = "gold18kprice"
    static let final_status = "final_status"
    static let namestatus = "namestatus"
    static let stall = "stall"
    static let testentry = "testentry"
    
}
let gold_display_jewels_stock_book_t3 = "gold_display_jewels_stock_book"
struct t3 {
    static let purchasecode = "purchasecode"
    static let purchasebillid = "purchasebillid"
    static let billno = "billno"
    static let orderid = "orderid"
    static let fromorder = "fromorder"
    static let oldcounti = "oldcounti"
    static let dealer = "dealer"
    static let jeweltype = "jeweltype"
    static let detailedjeweltype = "detailedjeweltype"
    static let subtype = "subtype"
    static let measurement = "measurement"
    static let alavucategory = "alavucategory"
    static let weightcategory = "weightcategory"
    static let weight = "weight"
    static let jewelsimage = "jewelsimage"
    static let stonetype = "stonetype"
    static let stonecs = "stonecs"
    static let stonename = "stonename"
    static let stonesize = "stonesize"
    static let stonecount = "stonecount"
    static let stoneprice = "stoneprice"
    static let stonevalue = "stonevalue"
    static let stonemeasurement = "stonemeasurement"
    static let purchasestoneprice = "purchasestoneprice"
    static let totpurchasestoneprice = "totpurchasestoneprice"
    static let stoneweight = "stoneweight"
    static let purchasestonewt = "purchasestonewt"
    static let totpurchasestonewt = "totpurchasestonewt"
    static let totstoneprice = "totstoneprice"
    static let ftotstoneprice = "ftotstoneprice"
    static let fstoneprice = "fstoneprice"
    static let totstoneweight = "totstoneweight"
    static let stonecheckbox = "stonecheckbox"
    static let wastageperc = "wastageperc"
    static let wastageg = "wastageg"
    static let mcpg = "mcpg"
    static let makingcharge = "makingcharge"
    static let huid = "huid"
    static let itemcode = "itemcode"
    static let exitemcode = "exitemcode"
    static let exbillid = "exbillid"
    static let purity = "purity"
    static let stall = "stall"
    static let directsell = "directsell"
    static let suspense = "suspense"
    static let prebook = "prebook"
    static let duedate = "duedate"
    static let missingstatus = "missingstatus"
    static let oldpurchasedamount = "oldpurchasedamount"
    static let olduniqueid = "olduniqueid"
    static let testentry = "testentry"
    static let qaddon = "qaddon"
    static let addon = "addon"

    
    
}

let gold_view_pnl_from_billing_high_performance_table_t4 = "gold_view_pnl_from_billing_high_performance_table"
struct t4 {
    static let billdate = "billdate"
    static let billno = "billno"
    static let billid = "billid"
    static let attender1 = "attender1"
    static let attender2 = "attender2"
    static let attender3 = "attender3"
    static let attender1q = "attender1q"
    static let attender2q = "attender2q"
    static let attender3q = "attender3q"
    static let item = "item"
    static let weight = "weight"
    static let stoneweight = "stoneweight"
    static let puritytouch = "puritytouch"
    static let salesamt = "salesamt"
    static let stoneprice = "stoneprice"
    static let gstperc = "gstperc"
    static let gstamount = "gstamount"
    static let discountprice = "discountprice"
    static let discountperc = "discountperc"
    static let purchaseamt = "purchaseamt"
    static let profitperg = "profitperg"
    static let totalprofit = "totalprofit"
    static let finalprofit = "finalprofit"
    static let purerate = "purerate"
    static let calculationrate = "calculationrate"
    static let itemcode = "itemcode"
    static let jeweltype = "jeweltype"
    static let fgst = "fgst"
    static let tgstperc = "tgstperc"
    static let tgst = "tgst"
    static let fgstperc = "fgstperc"
    static let exchange = "exchange"

}

let gold_direct_sell_items_with_details_for_billing_t5 = "gold_direct_sell_items_with_details_for_billing"
struct t5 {
    static let purchasecode = "purchasecode"
    static let dealer = "dealer"
    static let jeweltype = "jeweltype"
    static let subtype = "subtype"
    static let measurement = "measurement"
    static let alavucategory = "alavucategory"
    static let weightcategory = "weightcategory"
    static let weight = "weight"
    static let jewelsimage = "jewelsimage"
    static let stonetype = "stonetype"
    static let stonesize = "stonesize"
    static let stonecount = "stonecount"
    static let stoneprice = "stoneprice"
    static let stoneweight = "stoneweight"
    static let totstoneprice = "totstoneprice"
    static let totstoneweight = "totstoneweight"
    static let wastageperc = "wastageperc"
    static let wastageg = "wastageg"
    static let mcpg = "mcpg"
    static let makingcharge = "makingcharge"
    static let itemcode = "itemcode"
    static let directsell = "directsell"

    
}

let gold_old_jewels_purchased_registry_t6 = "gold_old_jewels_purchased_registry"
struct t6 {
    static let dealer = "dealer"
    static let olduniqueid = "olduniqueid"
    static let billno = "billno"
    static let orderid = "orderid"
    static let today_billid = "today_billid"
    static let jeweltype = "jeweltype"
    static let photo = "photo"
    static let billphoto = "billphoto"
    static let piecescount = "piecescount"
    static let pieceno = "pieceno"
    static let narration = "narration"
    static let rweight = "rweight"
    static let pweight = "pweight"
    static let wastage = "wastage"
    static let quality = "quality"
    static let actualpurityperc = "actualpurityperc"
    static let purchasedpurityperc = "purchasedpurityperc"
    static let boardrate = "boardrate"
    static let purchasedrate = "purchasedrate"
    static let inhandsof = "inhandsof"
    static let meltid = "meltid"
    static let ftodat_narration = "ftodat_narration"

}


let all_cash_transactions_ledger_t7 = "all_cash_transactions_ledger"
struct t7 {
    static let tblname = "tblname"
    static let colname = "colname"
    static let amt = "amt"
    static let at1 = "at1"
    static let ad1 = "ad1"
    static let at2 = "at2"
    static let ad2 = "ad2"
    static let at3 = "at3"
    static let ad3 = "ad3"
    static let at4 = "at4"
    static let ad4 = "ad4"
    static let fromdate = "fromdate"
    static let fromtime = "fromtime"
    static let todate = "todate"
    static let totime = "totime"
    static let testentry = "testentry"

    
}

let all_members_registered_details_t8 = "all_members_registered_details"
struct t8 {
    static let queue = "queue"
    static let membertype = "membertype"
    static let wtype = "wtype"
    static let wcategory = "wcategory"
    static let rno = "rno"
    static let rnocategory = "rnocategory"
    static let trcode = "trcode"
    static let emis = "emis"
    static let examno = "examno"
    static let addid = "addid"
    static let addid2 = "addid2"
    static let offinam = "offinam"
    static let whatsappgroupname = "whatsappgroupname"
    static let petnam = "petnam"
    static let pgm_cmts = "pgm_cmts"
    static let board = "board"
    static let cls = "cls"
    static let sec = "sec"
    static let sphoto = "sphoto"
    static let ssign = "ssign"
    static let sproofonef = "sproofonef"
    static let sproofoneb = "sproofoneb"
    static let sprooftwof = "sprooftwof"
    static let sprooftwob = "sprooftwob"
    static let spicture = "spicture"
    static let dob = "dob"
    static let tob = "tob"
    static let sex = "sex"
    static let ph1 = "ph1"
    static let ph2 = "ph2"
    static let mail1 = "mail1"
    static let mail2 = "mail2"
    static let add1 = "add1"
    static let add2 = "add2"
    static let hostel = "hostel"
    static let vno = "vno"
    static let stage = "stage"
    static let adno = "adno"
    static let pan = "pan"
    static let qual = "qual"
    static let desig = "desig"
    static let doj = "doj"
    static let yearofjoin = "yearofjoin"
    static let yeartermofjoin = "yeartermofjoin"
    static let qrofjoin = "qrofjoin"
    static let wexp = "wexp"
    static let prework = "prework"
    static let radm = "radm"
    static let fnam = "fnam"
    static let fotype = "fotype"
    static let foccu = "foccu"
    static let foccuco = "foccuco"
    static let foccuadd = "foccuadd"
    static let fph1 = "fph1"
    static let fph2 = "fph2"
    static let fmail1 = "fmail1"
    static let fmail2 = "fmail2"
    static let foccuph = "foccuph"
    static let fexist = "fexist"
    static let mnam = "mnam"
    static let motype = "motype"
    static let moccu = "moccu"
    static let moccuco = "moccuco"
    static let moccuadd = "moccuadd"
    static let mph1 = "mph1"
    static let mph2 = "mph2"
    static let mmail1 = "mmail1"
    static let mmail2 = "mmail2"
    static let moccuph = "moccuph"
    static let mexist = "mexist"
    static let spnam = "spnam"
    static let spoccutype = "spoccutype"
    static let spoccu = "spoccu"
    static let spoccuco = "spoccuco"
    static let spoccuadd = "spoccuadd"
    static let sph1 = "sph1"
    static let sph2 = "sph2"
    static let spmail1 = "spmail1"
    static let spmail2 = "spmail2"
    static let spoccuph = "spoccuph"
    static let spexist = "spexist"
    static let sibling1 = "sibling1"
    static let siblingbirth1 = "siblingbirth1"
    static let siblingco1 = "siblingco1"
    static let siblingamb1 = "siblingamb1"
    static let sibling2 = "sibling2"
    static let siblingbirth2 = "siblingbirth2"
    static let siblingco2 = "siblingco2"
    static let siblingamb2 = "siblingamb2"
    static let sibling3 = "sibling3"
    static let siblingbirth3 = "siblingbirth3"
    static let siblingco3 = "siblingco3"
    static let siblingamb3 = "siblingamb3"
    static let sibling4 = "sibling4"
    static let siblingbirth4 = "siblingbirth4"
    static let siblingco4 = "siblingco4"
    static let siblingamb4 = "siblingamb4"
    static let child1 = "child1"
    static let childbirth1 = "childbirth1"
    static let childschool1 = "childschool1"
    static let childamb1 = "childamb1"
    static let child2 = "child2"
    static let childbirth2 = "childbirth2"
    static let childschool2 = "childschool2"
    static let childamb2 = "childamb2"
    static let child3 = "child3"
    static let childbirth3 = "childbirth3"
    static let childschool3 = "childschool3"
    static let childamb3 = "childamb3"
    static let child4 = "child4"
    static let childbirth4 = "childbirth4"
    static let childschool4 = "childschool4"
    static let childamb4 = "childamb4"
    static let g1 = "g1"
    static let gph1 = "gph1"
    static let g2 = "g2"
    static let gph2 = "gph2"
    static let mt = "mt"
    static let nationality = "nationality"
    static let nativepl = "nativepl"
    static let caste = "caste"
    static let subcaste = "subcaste"
    static let commu = "commu"
    static let religion = "religion"
    static let hoby = "hoby"
    static let amb = "amb"
    static let parentamb = "parentamb"
    static let spoint = "spoint"
    static let bg = "bg"
    static let mediss = "mediss"
    static let eye = "eye"
    static let ht = "ht"
    static let wt = "wt"
    static let pqueue = "pqueue"
    static let pcode = "pcode"
    static let psphoto = "psphoto"
    static let pspicture = "pspicture"
    static let balanceamt = "balanceamt"
    static let referedby = "referedby"
    static let addinfo1 = "addinfo1"
    static let addinfo2 = "addinfo2"
    static let addinfo3 = "addinfo3"
    static let fromqrcode = "fromqrcode"
    static let feelevel = "feelevel"
    static let exist = "exist"

    
}

let all_skynet_wallet_transaction_ledger_t9 = "all_skynet_walstatic let_transaction_ledger"
struct t9 {
    static let entryid = "entryid"
    static let queue = "queue"
    static let amt = "amt"
    static let nar = "nar"
    static let ffdtype = "ffdtype"
    static let proof = "proof"
    static let getfrom = "getfrom"
    static let category = "category"
    static let ereturn = "ereturn"
    static let esession = "esession"
    static let incharge = "incharge"
    static let competition = "competition"
    static let dept = "dept"
    static let fkeyforfeegen = "fkeyforfeegen"

    
}

let com_customer_phno_address_book_t10 = "com_customer_phno_address_book"
struct t10 {
    static let queue = "queue"
    static let customer = "customer"
    static let customername = "customername"
    static let faorspouname = "faorspouname"
    static let dob = "dob"
    static let dowedding = "dowedding"
    static let gender = "gender"
    static let custphoto = "custphoto"
    static let mailid = "mailid"
    static let ph1no = "ph1no"
    static let ph2no = "ph2no"
    static let address = "address"
    static let postaladdress = "postaladdress"
    static let reference = "reference"
    static let referedby = "referedby"
    static let addinfo = "addinfo"
    static let visitedbranch = "visitedbranch"
    static let relationcounti = "relationcounti"
    static let relationtype = "relationtype"
    static let verified = "verified"

    
}
let gold_current_price_of_metals_at_retail_melting_t11 = "gold_current_price_of_metals_at_retail_melting"
struct t11 {
    static let gold24kprice = "gold24kprice"
    static let gold22kprice = "gold22kprice"
    static let gold18kprice = "gold18kprice"
    static let gold16kprice = "gold16kprice"
    static let coinrate = "coinrate"
    static let silverprice = "silverprice"
    static let silverpureprice = "silverpureprice"
    static let silveroldprice = "silveroldprice"
    static let fromdate = "fromdate"
    static let fromtime = "fromtime"
    static let todate = "todate"
    static let totime = "totime"

    
}

let gold_jeweltypes_with_subtypes_categories_and_price_limits_t12 = "gold_jeweltypes_with_subtypes_categories_and_price_limits"
struct t12 {
    static let type = "type"
    static let code = "code"
    static let subtype = "subtype"
    static let min_wastage_perc = "min_wastage_perc"
    static let max_wastage_perc = "max_wastage_perc"
    static let min_making_chrge = "min_making_chrge"
    static let max_making_chrge = "max_making_chrge"
    static let goldcategory = "goldcategory"
    static let min_price = "min_price"
    static let max_price = "max_price"
    static let unitofalavu = "unitofalavu"
    static let alavucategories = "alavucategories"
    static let weightcategories = "weightcategories"
    static let mustbetagged = "mustbetagged"

    
}
let gold_neighbour_sell_items_with_details_created_while_billing_t13 = "gold_neighbour_sell_items_with_details_created_while_billing"
struct t13 {
    static let shopname = "shopname"
    static let jeweltype = "jeweltype"
    static let subtype = "subtype"
    static let measurement = "measurement"
    static let alavucategory = "alavucategory"
    static let weightcategory = "weightcategory"
    static let weight = "weight"
    static let touch = "touch"
    static let paybackmetal = "paybackmetal"
    static let tppure = "tppure"
    static let ppure = "ppure"
    static let jewelsimage = "jewelsimage"
    static let stonetype = "stonetype"
    static let stonesize = "stonesize"
    static let stonecount = "stonecount"
    static let stoneprice = "stoneprice"
    static let stoneweight = "stoneweight"
    static let totstoneprice = "totstoneprice"
    static let totstoneweight = "totstoneweight"
    static let paymentstatus = "paymentstatus"
    static let wastageperc = "wastageperc"
    static let wastageg = "wastageg"
    static let mcpg = "mcpg"
    static let beforeopening = "beforeopening"
    static let makingcharge = "makingcharge"

    
}
let gold_pure_metal_stock_book_t14 = "gold_pure_metal_stock_book"
struct t14 {
    static let dealer = "dealer"
    static let billno = "billno"
    static let orderid = "orderid"
    static let olduniqueid = "olduniqueid"
    static let bullion = "bullion"
    static let meltid = "meltid"
    static let photo = "photo"
    static let purityperc = "purityperc"
    static let rweight = "rweight"
    static let totalweight = "totalweight"
    static let advanceweight = "advanceweight"
    static let pweight = "pweight"
    static let totalprice = "totalprice"
    static let gramprice = "gramprice"
    static let wastage = "wastage"
    static let quality = "quality"
    static let narration = "narration"
    static let purchasedpurityperc = "purchasedpurityperc"
    static let boardrate = "boardrate"
    static let purchasedrate = "purchasedrate"
    
}
let com_accounts_receipt_entries_for_cashbook_t15 = "com_accounts_receipt_entries_for_cashbook"
struct t15 {
    static let category = "category"
    static let dealer_type = "dealer_type"
    static let dealer_name = "dealer_name"
    static let vehicleno = "vehicleno"
    static let billno = "billno"
    static let paymentmethod = "paymentmethod"
    static let description = "description"
    static let ramt = "ramt"
    static let rtransactionhash = "rtransactionhash"
    static let rbankcash = "rbankcash"
    static let balance = "balance"
    static let adata1 = "adata1"
    static let adata2 = "adata2"
    static let adata3 = "adata3"
    static let transactionid = "transactionid"
    static let phno1 = "phno1"
    static let phno2 = "phno2"
    static let cqueue = "cqueue"
    static let higherauthorities = "higherauthorities"
    static let narration = "narration"
    static let date = "date"
    static let status = "status"
    static let bill = "bill"
    static let prebookitem = "prebookitem"

    
}
let gold_generated_quotation_before_billing_t16 = "gold_generated_quotation_before_billing"
struct t16 {
    static let billid = "billid"
    static let today_billid = "today_billid"
    static let attender1 = "attender1"
    static let attender2 = "attender2"
    static let attender3 = "attender3"
    static let itemcode = "itemcode"
    static let jewelimage = "jewelimage"
    static let goldcategory = "goldcategory"
    static let jeweltype = "jeweltype"
    static let subtype = "subtype"
    static let measurement = "measurement"
    static let alavucategory = "alavucategory"
    static let weightcategory = "weightcategory"
    static let weight = "weight"
    static let itemprice = "itemprice"
    static let mc_itemprice = "mc_itemprice"
    static let makingcharge = "makingcharge"
    static let wastageperc = "wastageperc"
    static let metcategory = "metcategory"
    static let metprice = "metprice"
    static let paymenttype = "paymenttype"
    static let referenceid = "referenceid"
    static let paidbyother = "paidbyother"
    static let proofimage = "proofimage"
    static let metaltype = "metaltype"
    static let metalweight = "metalweight"
    static let metalwaste = "metalwaste"
    static let purityperc = "purityperc"
    static let onlinetype = "onlinetype"
    static let jewelprice = "jewelprice"
    static let stonetype = "stonetype"
    static let stonecs = "stonecs"
    static let stonename = "stonename"
    static let stonesize = "stonesize"
    static let stonecount = "stonecount"
    static let stoneprice = "stoneprice"
    static let stoneweight = "stoneweight"
    static let totstoneprice = "totstoneprice"
    static let totstoneweight = "totstoneweight"
    static let rold = "rold"
    static let roldcalceqvamt = "roldcalceqvamt"
    static let rexchangecodes = "rexchangecodes"
    static let rexchangecalceqvamt = "rexchangecalceqvamt"
    static let rpure = "rpure"
    static let rpurecalceqvamt = "rpurecalceqvamt"
    static let coincode = "coincode"
    static let rcoin = "rcoin"
    static let rcoincalceqvamt = "rcoincalceqvamt"
    static let rcash = "rcash"
    static let fromid = "fromid"
    static let customerqueue = "customerqueue"
    static let credit_customer_name = "credit_customer_name"
    static let return_credit_amt_date = "return_credit_amt_date"
    static let advance_amt = "advance_amt"
    static let customerwallet = "customerwalstatic let"
    static let careof = "careof"
    static let credit_narration = "credit_narration"
    static let rtransactionhash = "rtransactionhash"
    static let rbankcash = "rbankcash"
    static let bybank = "bybank"
    static let gstperc = "gstperc"
    static let discountperc = "discountperc"
    static let gsttotalprice = "gsttotalprice"
    static let discounttotalprice = "discounttotalprice"
    static let roundofprice = "roundofprice"
    static let oldex_buyingtype = "oldex_buyingtype"
    static let oldex_changetype = "oldex_changetype"
    static let oldex_piececount = "oldex_piececount"
    static let oldex_paidamt = "oldex_paidamt"
    static let oldex_proofimage = "oldex_proofimage"
    static let oldex_metaltype = "oldex_metaltype"
    static let oldex_metalweight = "oldex_metalweight"
    static let oldex_metalwaste = "oldex_metalwaste"
    static let oldex_purityperc = "oldex_purityperc"
    static let oldex_jewelprice = "oldex_jewelprice"
    static let ex_itemcode = "ex_itemcode"
    static let ex_amt = "ex_amt"
    static let ex_proofimage = "ex_proofimage"
    static let pure_changetype = "pure_changetype"
    static let pure_ramt = "pure_ramt"
    static let pure_proofimage = "pure_proofimage"
    static let pure_metaltype = "pure_metaltype"
    static let pure_metalweight = "pure_metalweight"
    static let pure_purityperc = "pure_purityperc"
    static let pure_jewelprice = "pure_jewelprice"
    static let coin_buyingtype = "coin_buyingtype"
    static let coin_piececount = "coin_piececount"
    static let coin_ramt = "coin_ramt"
    static let coin_proofimage = "coin_proofimage"
    static let coin_metaltype = "coin_metaltype"
    static let coin_metalweight = "coin_metalweight"
    static let coin_purityperc = "coin_purityperc"
    static let coin_jewelprice = "coin_jewelprice"
    static let bycash = "bycash"
    static let totalprice = "totalprice"
    static let cust_phno = "cust_phno"
    static let tagaton = "tagaton"
    static let gold24kprice = "gold24kprice"
    static let gold22kprice = "gold22kprice"
    static let gold18kprice = "gold18kprice"
    static let namestatus = "namestatus"

    
}
let gold_nearby_jewelries_for_relationship_and_sales_t17 = "gold_nearby_jewelries_for_relationship_and_sales"
struct t17 {
    static let shopname = "shopname"
    static let description = "description"
    static let phno = "phno"
    
}
let gold_primary_stock_dealers_details_t18 = "gold_primary_stock_dealers_details"
struct t18 {
    static let code = "code"
    static let seal = "seal"
    static let dealername = "dealername"
    static let sizescale = "sizescale"
    static let phno1 = "phno1"
    static let phno2 = "phno2"
    static let address = "address"
    static let photos = "photos"
    static let description = "description"
    static let district = "district"
    static let state = "state"
    static let neighbourcounti = "neighbourcounti"

    
}
let gold_owners_controls_over_various_fields_t19 = "gold_owners_controls_over_various_fields"
struct t19 {
    static let min_fixed_gst = "min_fixed_gst"
    static let fixed_gst = "fixed_gst"
    static let max_discount = "max_discount"
    static let display_roundoff = "display_roundoff"
    static let display_discount = "display_discount"
    static let addon_amount = "addon_amount"

    
}
let gold_current_price_of_metals_at_retail_melting_t20 = "gold_current_price_of_metals_at_retail_melting"
struct t20 {
    static let gold24kprice = "gold24kprice"
    static let gold22kprice = "gold22kprice"
    static let gold18kprice = "gold18kprice"
    static let gold16kprice = "gold16kprice"
    static let coinrate = "coinrate"
    static let silverprice = "silverprice"
    static let silverpureprice = "silverpureprice"
    static let silveroldprice = "silveroldprice"
    static let fromdate = "fromdate"
    static let fromtime = "fromtime"
    static let todate = "todate"
    static let totime = "totime"
}
let gold_purchases_of_jewels_from_dealers_t21 = "gold_purchases_of_jewels_from_dealers"
struct t21 {
    static let purchasecode = "purchasecode"
    static let orderid = "orderid"
    static let dealercode = "dealercode"
    static let jeweltype = "jeweltype"
    static let subtype = "subtype"
    static let alavucategory = "alavucategory"
    static let piececount = "piececount"
    static let jewelweight = "jewelweight"
    static let weightperpiece = "weightperpiece"
    static let purityperc = "purityperc"
    static let quality = "quality"
    static let touchperc = "touchperc"
    static let wastage = "wastage"
    static let makingcharge = "makingcharge"
    static let makingchargeper = "makingchargeper"
    static let puritytouch = "puritytouch"
    static let totmakingcharge = "totmakingcharge"
    static let stonetype = "stonetype"
    static let stonecheckbox = "stonecheckbox"
    static let stonecs = "stonecs"
    static let stonename = "stonename"
    static let stonesize = "stonesize"
    static let stonecount = "stonecount"
    static let stoneprice = "stoneprice"
    static let stoneweight = "stoneweight"
    static let totstoneprice = "totstoneprice"
    static let totstoneweight = "totstoneweight"
    static let buyingtype = "buyingtype"
    static let goldcategory = "goldcategory"
    static let purerate = "purerate"
    static let buyingtime = "buyingtime"
    static let tpstone = "tpstone"
    static let tpmc = "tpmc"
    static let tppure = "tppure"
    static let tpcash = "tpcash"
    static let pstone = "pstone"
    static let pmc = "pmc"
    static let ppure = "ppure"
    static let pcash = "pcash"
    static let rpure = "rpure"
    static let rcash = "rcash"
    static let rmc = "rmc"
    static let rstone = "rstone"
    static let pbankcash = "pbankcash"
    static let ptransactionhash = "ptransactionhash"
    static let jewelimage = "jewelimage"
    static let billimg = "billimg"
    static let narration = "narration"
    static let tagstatus = "tagstatus"
    static let exitemcode = "exitemcode"
    static let exbillid = "exbillid"
    static let customerphno = "customerphno"
    static let customername = "customername"
    static let testentry = "testentry"

    
}
let gold_exchange_jewel_items_via_bill_det_t22 = "gold_exchange_jewel_items_via_bill_det"
struct t22 {
    static let type = "type"
    static let exbillid = "exbillid"
    static let extodaybillid = "extodaybillid"
    static let jeweltype = "jeweltype"
    static let jewelimage = "jewelimage"
    static let weight = "weight"
    static let itemcode = "itemcode"
    static let billdate = "billdate"
    static let billtime = "billtime"
    static let billid = "billid"
    static let todaybillid = "todaybillid"

    
}
let gold_customer_balance_to_be_paid_t23 = "gold_customer_balance_to_be_paid"
struct t23 {
    static let billid = "billid"
    static let today_billid = "today_billid"
    static let itemcode = "itemcode"
    static let jeweltype = "jeweltype"
    static let weight = "weight"
    static let careof = "careof"
    static let oldcareof = "oldcareof"
    static let credit_customer_name = "credit_customer_name"
    static let cust_phno = "cust_phno"
    static let cust_phno2 = "cust_phno2"
    static let return_credit_amt_date = "return_credit_amt_date"
    static let address = "address"
    static let addressornone = "addressornone"
    static let advance_amt = "advance_amt"
    static let totalprice = "totalprice"
    static let rcash = "rcash"
    static let adjustmentid = "adjustmentid"
    static let credit_status = "credit_status"
    static let irdstatus = "irdstatus"
    static let credit_narration = "credit_narration"
    static let openingbal = "openingbal"
    static let callingstatus = "callingstatus"
    static let pendingfrom = "pendingfrom"
    static let priceof916whilebuying = "priceof916whilebuying"
    static let equivalentof916 = "equivalentof916"
    static let todaysequivalent = "todaysequivalent"

    
}
let gold_old_jewels_given_as_payment_to_dealer_or_sold_to_customer_t24 = "gold_old_jewels_given_as_payment_to_dealer_or_sold_to_customer"
struct t24 {
    static let olduniqueid = "olduniqueid"
    static let billno = "billno"
    static let orderid = "orderid"
    static let todaybillid = "todaybillid"
    static let jeweltype = "jeweltype"
    static let photo = "photo"
    static let billphoto = "billphoto"
    static let piecescount = "piecescount"
    static let narration = "narration"
    static let pweight = "pweight"
    static let wastage = "wastage"
    static let quality = "quality"
    static let actualpurityperc = "actualpurityperc"
    static let purchasedpurityperc = "purchasedpurityperc"
    static let givento = "givento"
    static let dealer = "dealer"
    static let dealerpaymentcode = "dealerpaymentcode"
    static let transactionid = "transactionid"
    static let asdealerbeforepurebalance = "asdealerbeforepurebalance"
    static let asdealerpurebalance = "asdealerpurebalance"
    static let asdealerafterpurebalance = "asdealerafterpurebalance"
    static let asdealerbeforemcbalance = "asdealerbeforemcbalance"
    static let asdealermcbalance = "asdealermcbalance"
    static let asdealeraftermcbalance = "asdealeraftermcbalance"
    static let asdealerbeforestonebalance = "asdealerbeforestonebalance"
    static let asdealerstonebalance = "asdealerstonebalance"
    static let asdealerafterstonebalance = "asdealerafterstonebalance"
    static let asdealerbeforecashbalance = "asdealerbeforecashbalance"
    static let asdealercashbalance = "asdealercashbalance"
    static let asdealeraftercashbalance = "asdealeraftercashbalance"
    static let customername = "customername"
    static let customerphno = "customerphno"
    static let customercounti = "customercounti"
    static let paidcashvalue = "paidcashvalue"
    static let boardrate = "boardrate"
    static let givenrate = "givenrate"
    static let obstatus = "obstatus"

    
}
let all_categories_and_details_of_banks_owned_by_companies_t25 = "all_categories_and_details_of_banks_owned_by_companies"
struct t25 {
    static let bank = "bank"
    static let displaytocustomers = "displaytocustomers"
    static let brand = "brand"
    static let bankvalues = "bankvalues"
    static let accno = "accno"
    static let banktype = "banktype"
    static let branch = "branch"
    static let ifsc = "ifsc"
    static let imps = "imps"
    static let neft = "neft"
    static let rtgs = "rtgs"
    static let tpt = "tpt"
    static let primaryupi = "primaryupi"
    static let secondaryupi = "secondaryupi"
    static let tertiaryupi = "tertiaryupi"
    static let primarycreditcard = "primarycreditcard"
    static let secondarycreditcard = "secondarycreditcard"
    static let tertiarycreditcard = "tertiarycreditcard"
    static let primarydebitcard = "primarydebitcard"
    static let secondarydebitcard = "secondarydebitcard"
    static let tertiarydebitcard = "tertiarydebitcard"
    static let primarypaytm = "primarypaytm"
    static let secondarypaytm = "secondarypaytm"
    static let tertiarypaytm = "tertiarypaytm"
    static let primaryolamoney = "primaryolamoney"
    static let secondaryolamoney = "secondaryolamoney"
    static let tertiaryolamoney = "tertiaryolamoney"
    static let primarymobikwik = "primarymobikwik"
    static let secondarymobikwik = "secondarymobikwik"
    static let tertiarymobikwik = "tertiarymobikwik"
    static let primaryphonepe = "primaryphonepe"
    static let secondaryphonepe = "secondaryphonepe"
    static let tertiaryphonepe = "tertiaryphonepe"
    static let primaryairtelmoney = "primaryairtelmoney"
    static let secondaryairtelmoney = "secondaryairtelmoney"
    static let tertiaryairtelmoney = "tertiaryairtelmoney"
    static let primaryjiomoney = "primaryjiomoney"
    static let secondaryjiomoney = "secondaryjiomoney"
    static let tertiaryjiomoney = "tertiaryjiomoney"
    static let primaryamazonpay = "primaryamazonpay"
    static let secondaryamazonpay = "secondaryamazonpay"
    static let tertiaryamazonpay = "tertiaryamazonpay"

    
}

let gold_smith_old_jewels_purchased_registry_t26 = "gold_smith_old_jewels_purchased_registry"
struct t26 {
    static let dealer = "dealer"
    static let olduniqueid = "olduniqueid"
    static let billno = "billno"
    static let orderid = "orderid"
    static let today_billid = "today_billid"
    static let jeweltype = "jeweltype"
    static let photo = "photo"
    static let billphoto = "billphoto"
    static let piecescount = "piecescount"
    static let pieceno = "pieceno"
    static let narration = "narration"
    static let cweight = "cweight"
    static let rweight = "rweight"
    static let pweight = "pweight"
    static let wastage = "wastage"
    static let quality = "quality"
    static let actualpurityperc = "actualpurityperc"
    static let purchasedpurityperc = "purchasedpurityperc"
    static let boardrate = "boardrate"
    static let purchasedrate = "purchasedrate"
    static let inhandsof = "inhandsof"
    static let meltid = "meltid"
    static let ftodat_narration = "ftodat_narration"

    
}
